name: Test

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"
      - "!privpage"

jobs:
  test:
    name: Test

    strategy:
      fail-fast: false
      matrix:
        # os: ["ubuntu", "macos", "windows"]
        os: ["ubuntu"]
        # python-version: [3.6, 3.7, 3.8, 3.9]
        python-version: [3.8, 3.9]
        rdkit-version: [2020.09]
        # include:
        #   - os: ubuntu
        #     bash-cmd: bash -l {0}
        #   - os: macos
        #     bash-cmd: bash -l {0}
        #   - os: windows
        #     bash-cmd: cmd /C call {0}

    runs-on: ${{ matrix.os }}-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 3
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ runner.os }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('env.yml') }}

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@master # TODO: pin the version when new version is released.
        with:
          miniforge-variant: Mambaforge
          use-mamba: true
          use-only-tar-bz2: true
          auto-activate-base: true
          activate-environment: ""

      - name: Setup conda env
        run: |
          # Patch the conda env file
          mamba install --yes pyyaml
          python .github/patch_conda_env.py --env env.yml -d \
            python=${{ matrix.python-version }} \
            rdkit=${{ matrix.rdkit-version }} \
            > env-patched.yml

          # Create conda env
          conda create -n datamol

      - name: Install Dependencies
        run: |
          conda activate datamol
          mamba env update -f env-patched.yml

      - name: Install library
        run: |
          conda activate datamol
          python -m pip install .

      - name: Run tests
        run: |
          conda activate datamol
          pytest

      - name: Test building the doc
        run: |
          conda activate datamol

          # Regenerate the API doc
          python -m datamol._mkdocs

          # Build and serve the doc
          mkdocs build

      - name: Deploy the doc
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          conda activate datamol

          # Get the privpage branch
          git fetch origin privpage

          # Regenerate the API doc
          python -m datamol._mkdocs

          # Build and serve the doc
          mkdocs gh-deploy
